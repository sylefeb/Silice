// SL 2021-08-31 @sylefeb
//
// Generic RV32I SOC
//
// @sylefeb 2021
// https://github.com/sylefeb/Silice
// MIT license, see LICENSE_MIT in Silice repo root

$$config['bram_wmask_byte_wenable_width'] = 'data'

// include the processor
$include('../../../../projects/ice-v/CPUs/ice-v-dual.si')

// --------------------------------------------------
// SOC
// --------------------------------------------------

group bram_io
{
  uint4       wenable(0),
  uint32      wdata(0),
  uint32      rdata(0),
  uint$addrW$ addr(0),    // boot address
}

// --------------------------------------------------

unit $algorithm_name$($io_decl$)
{

$$if verbose then
   uint32 cycle(0);
$$end

  // ram
  // - intermediate interface to perform memory mapping
  bram_io memio;
  // - uses template "bram_wmask_byte", that turns wenable into a byte mask
  bram uint32 mem<"bram_wmask_byte">[$memsz$] = {$meminit$ pad(uninitialized)};
  // - for IO mapping, need to record prev. cycle addr and rw
  uint$addrW$ prev_mem_addr(0);
  uint1       prev_mem_rw(0);

  // cpu
  rv32i_cpu cpu( mem <:> memio );

  // io mapping
  always {
    uint1 wen      = (memio.wenable != 0);
    uint1 io_write = (memio.addr[$external$,1]    &  wen);
    uint1 io_read  = (prev_mem_addr[$external$,1] & ~prev_mem_rw);
    $io_select$
    $on_accessed$
    // ---- memory access
    mem.wdata     = memio.wdata;
    mem.addr      = memio.addr;
    mem.wenable   = memio.wenable & {4{~memio.addr[$external$,1]}};
    //                                ^^^^^^^ no BRAM write if in IO addresses
    // ---- memory mapping to IO reads
    memio.rdata = (~io_read ? mem.rdata : ($io_reads$));
$$if verbose then
    if (io_read) {
      __display("[cycle %d] IO read @%b = %d",cycle,prev_mem_addr,memio.rdata);
    }
$$end
    // ---- record addr and rw for next cycle
    prev_mem_addr = memio.addr;
    prev_mem_rw   = wen;
    // ---- memory mapping to IO writes
    if (io_write) {
      $io_writes$
$$if verbose then
      __display("[cycle %d] IO write @%b = %d",cycle,memio.addr,memio.wdata);
$$end
    }
$$if verbose then
    cycle = cycle + 1;
$$end
  }

}

// --------------------------------------------------
